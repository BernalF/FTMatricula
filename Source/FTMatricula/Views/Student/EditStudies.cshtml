@model FTMatricula.Models.Student

@{
    Layout = "~/Views/Shared/_LayoutKendo.cshtml";
    ViewBag.Title = Resources.GetValue("STUDENT_MAINTENANCE");
}

@section styles {

}

<div id="content_edit_left">
    <div class="editMenuSpace">
        <div class="editMenu">
            <ul>
                <li class="editOptList">
                    <div class="editOpt">
                        <a href="@Url.Action("EditPD", "Student", routeValues: new { id = Model.StudentID })">@Resources.GetValue("PERSONAL_DATA")
                        </a>
                    </div>
                </li>
                <li class="editOptList">
                    <div class="editOpt">
                        <a href="@Url.Action("EditAD", "Student", routeValues: new { id = Model.StudentID })">@Resources.GetValue("ADITIONAL_DATA")
                        </a>
                    </div>
                </li>
                <li class="editOptList editOptSelected hide">
                    <div class="editOpt">
                        <a href="#">@Resources.GetValue("ACADEMIC_INFORMATION")
                        </a>
                    </div>
                </li>
                <li class="editOptList">
                    <div class="editOpt">
                        <a href="@Url.Action("LinkStudentPlan", "Student", routeValues: new { id = Model.StudentID })">Vincular a Planes
                        </a>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

<div id="content_edit_right">

    <div class="editBox">
        @using (Html.BeginForm())
        { 
            <div class="editTitle">
                <span> @Resources.GetValue("EDIT_STUDENT_TITLE") -</span>@Resources.GetValue("ACADEMIC_INFORMATION")
            </div>

            <div class="editDetail">
                <div class="detailBox100">
                    @*@(Html.Kendo().Grid<FTMatricula.Models.StudiesInformation>()
                                      .Name("Grid")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(m => m.SchoolName).Title(@Resources.GetValue("SCHOOL_NAME"));
                                          columns.Bound(m => m.Degree).Title(@Resources.GetValue("DESCRIPTION"));
                                          columns.Bound(m => m.Year).Title(@Resources.GetValue("SCHOOL_CODE"));
                                          columns.Command(command =>
                                          {
                                              command.Edit().Text(@Resources.GetValue("EDIT")).UpdateText(@Resources.GetValue("UPDATE")).CancelText(@Resources.GetValue("CANCEL"));
                                              command.Destroy().Text(@Resources.GetValue("DELETE"));
                                          }).Width(180);
                                      })
                                     .Editable(editable =>
                                              {
                                                  editable.Mode(GridEditMode.PopUp)
                                                  .Window(m =>
                                                  {
                                                      m.Title(@Resources.GetValue("EDIT")).Draggable();
                                                  });
                                                  editable.DisplayDeleteConfirmation(@Resources.GetValue("DELETE_CONFIRMATION"));
                                              })
                                      .Sortable(sor => sor.AllowUnsort(true))
                                      .ToolBar(create => create.Create()
                                          .Text(@Resources.GetValue("ADD_SCHOOL"))
                                          .HtmlAttributes(new { @class = "kendoAddbutton" }))
                                      
                                      .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Events(events => events.Error("error_handler"))
                                            .ServerOperation(false)
                                            .Read(read => read.Action("PagingStudies", "Student"))
                                            .Create(create => create.Action("CreateSchool", "School"))
                                            .Update(update => update.Action("UpdateSchool", "School"))
                                            .Destroy(destroy => destroy.Action("DestroySchool", "School"))
                                            .Model(model => model.Id(m => m.StudyID))
                                      )
                                )*@
                </div>
            </div>
            
            <div class="clear"></div>
            <div class="formBtnBar">
                @Html.ActionLink(Resources.GetValue("CANCEL"), "index", "Student", routeValues: null, htmlAttributes: new { @class = "button back" })
            </div>
            <div class="clear"></div>
        }
    </div>

</div>

@section Scripts {
    <script type="text/javascript">

        function submit_form() {
            //$('.modalBg').fadeIn();
            //$('.loading').fadeIn();
            document.forms[0].submit();
            return true;
        }
    </script>
}
